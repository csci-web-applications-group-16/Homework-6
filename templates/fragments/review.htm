<div style="margin: 50px 0 50px 0;">
    <h1>Test Results</h1><br>
    <script>
        chart = new CanvasJS.Chart("chart_container", {
            animationEnabled: true,
            theme: "light2",
            title: {
                text: "Graph"
            },
            axisX: {
                valueFormatString: "MMM"
            },
            axisY: {
                suffix: " age",
                labelFormatter: addSymbols
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                itemclick: toggleDataSeries
            },
            data: [
                {
                    type: "column",
                    name: "Age",
                    showInLegend: true,
                    xValueFormatString: "MMMM YYYY",
                    yValueFormatString: "###0",
                    dataPoints: [
                        {x: new Date(919, 0), y: 200},
                        {x: new Date(1019, 0), y: 300},
                        {x: new Date(1119, 0), y: 250},
                        {x: new Date(1219, 0), y: 700,},
                        {x: new Date(1319, 0), y: 500},
                        {x: new Date(1419, 0), y: 350},
                        {x: new Date(1519, 0), y: 500},
                        {x: new Date(1619, 0), y: 430},
                        {x: new Date(1719, 0), y: 350},
                        {x: new Date(1819, 0), y: 600},
                        {x: new Date(1919, 0), y: 400},
                        {x: new Date(2019, 0), y: 500}
                    ]
                },
                {
                    type: "line",
                    name: "Immunity to Garlic",
                    showInLegend: true,
                    yValueFormatString: "###0",
                    dataPoints: [
                        {x: new Date(919, 0), y: 200},
                        {x: new Date(1019, 0), y: 200},
                        {x: new Date(1119, 0), y: 250},
                        {x: new Date(1219, 0), y: 300,},
                        {x: new Date(1319, 0), y: 300},
                        {x: new Date(1419, 0), y: 350},
                        {x: new Date(1519, 0), y: 300},
                        {x: new Date(1619, 0), y: 430},
                        {x: new Date(1719, 0), y: 350},
                        {x: new Date(1819, 0), y: 300},
                        {x: new Date(1919, 0), y: 400},
                        {x: new Date(2019, 0), y: 500}
                    ]
                },
                {
                    type: "area",
                    name: "Complexion",
                    markerBorderColor: "white",
                    markerBorderThickness: 2,
                    showInLegend: true,
                    yValueFormatString: "###0",
                    dataPoints: [
                        {x: new Date(919, 0), y: 200},
                        {x: new Date(1019, 0), y: 300},
                        {x: new Date(1119, 0), y: 250},
                        {x: new Date(1219, 0), y: 400,},
                        {x: new Date(1319, 0), y: 500},
                        {x: new Date(1419, 0), y: 350},
                        {x: new Date(1519, 0), y: 300},
                        {x: new Date(1619, 0), y: 430},
                        {x: new Date(1719, 0), y: 350},
                        {x: new Date(1819, 0), y: 300},
                        {x: new Date(1919, 0), y: 400},
                        {x: new Date(2019, 0), y: 500}
                    ]
                }]
        });

        chart.render();

        function addSymbols(e) {
            const suffixes = ["", "K", "M", "B"];
            let order = Math.max(Math.floor(Math.log(e.value) / Math.log(1000)), 0);

            if (order > suffixes.length - 1)
                order = suffixes.length - 1;

            const suffix = suffixes[order];
            return CanvasJS.formatNumber(e.value / Math.pow(1000, order)) + suffix;
        }

        function toggleDataSeries(e) {
            e.dataSeries.visible = !(typeof (e.dataSeries.visible) === "undefined" || e.dataSeries.visible);
            e.chart.render();
        }
    </script>

    <div id="chart_container" style="height: 300px; width: 100%;"></div>
</div>